{"version":3,"file":"static/js/699.4c7bac4e.chunk.js","mappings":"2QAqDA,MA3CeA,KACX,MAAOC,IAAWC,EAAAA,EAAAA,MACXC,IAAmBC,EAAAA,EAAAA,OACnBC,IAAQC,EAAAA,EAAAA,UAASH,EAAgBI,IAAI,UACrCC,EAAUC,IAAeH,EAAAA,EAAAA,WAAS,GACzCI,QAAQC,IAAIC,OAAOC,SAASC,KAAM,gCAClC,MAAQC,KAAMC,EAAWC,UAAWC,IAAoBC,EAAAA,EAAAA,IAAuB,CAAEd,UAC1Ee,EAAaC,IAAYC,EAAAA,EAAAA,MAiBhC,OAfAC,EAAAA,EAAAA,YAAU,KAEFH,EADAJ,EACY,CAACQ,YAAaR,EAAUS,cAExB,CAAED,YAAavB,EAAQyB,EAAAA,KACvC,GACD,CAACV,KAEJO,EAAAA,EAAAA,YAAU,KACM,OAARF,QAAQ,IAARA,GAAAA,EAAUN,MACVN,GAAY,EAChB,GACD,CAACY,IAGGb,GACHmB,EAAAA,EAAAA,IAAU,CAACC,EAAAA,KAEXC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAEtB,C","sources":["views/grwth/Client.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useSearchParams } from 'react-router-dom';\r\nimport './index.css';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { useCookies } from 'react-cookie';\r\n// routes\r\nimport MainRoutes from '../../routes/MainRoutes';\r\nimport { AUTHORISATION_TOKEN_STORAGE_KEY, AUTHORISATION_USER_ID_STORAGE_KEY, AUTHORISATION_USER_NAME_STORAGE_KEY } from 'utils/constants';\r\nimport { useGetAccessTokenQuery, useGetUserDataMutation } from 'store/slices/apiSlice';\r\n\r\nconst Client = () => {\r\n    const [cookies] = useCookies();\r\n    const [queryParameters] = useSearchParams();\r\n    const [code] = useState(queryParameters.get('code')); //get code value from thirty party api\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    console.log(window.location.href, '=========== client =========');\r\n    const { data: tokenData, isLoading: getTokenLoading } = useGetAccessTokenQuery({ code });\r\n    const [getuserData, response] = useGetUserDataMutation();\r\n    \r\n    useEffect(() => {\r\n        if (tokenData) {\r\n            getuserData({accessToken: tokenData.access_token });\r\n        } else {\r\n            getuserData({ accessToken: cookies[AUTHORISATION_TOKEN_STORAGE_KEY] });\r\n        } \r\n    }, [tokenData]);\r\n\r\n    useEffect(() => {      \r\n        if (response?.data) {\r\n            setIsLoaded(true);\r\n        }\r\n    }, [response]);\r\n\r\n    //Loading page\r\n    return isLoaded ? (\r\n        useRoutes([MainRoutes])\r\n    ) : (\r\n        <div className=\"center\">\r\n            <div className=\"wave\"></div>\r\n            <div className=\"wave\"></div>\r\n            <div className=\"wave\"></div>\r\n            <div className=\"wave\"></div>\r\n            <div className=\"wave\"></div>\r\n            <div className=\"wave\"></div>\r\n            <div className=\"wave\"></div>\r\n            <div className=\"wave\"></div>\r\n            <div className=\"wave\"></div>\r\n            <div className=\"wave\"></div>\r\n        </div>\r\n    );\r\n    // return useRoutes([MainRoutes]);\r\n};\r\n\r\nexport default Client;\r\n"],"names":["Client","cookies","useCookies","queryParameters","useSearchParams","code","useState","get","isLoaded","setIsLoaded","console","log","window","location","href","data","tokenData","isLoading","getTokenLoading","useGetAccessTokenQuery","getuserData","response","useGetUserDataMutation","useEffect","accessToken","access_token","AUTHORISATION_TOKEN_STORAGE_KEY","useRoutes","MainRoutes","_jsxs","className","children","_jsx"],"sourceRoot":""}