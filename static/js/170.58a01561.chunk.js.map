{"version":3,"file":"static/js/170.58a01561.chunk.js","mappings":"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","sources":["hooks/useScriptRef.js","ui-component/cards/AuthFooter.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","utils/password-strength.js","views/pages/authentication/auth-forms/AuthRegister.js","views/pages/authentication/authentication3/Register3.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","// material-ui\r\nimport { Link, Typography, Stack } from '@mui/material';\r\n\r\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\r\n\r\nconst AuthFooter = () => (\r\n    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://grwthx-portal.leoluca.io\" target=\"_blank\" underline=\"hover\">\r\n        GrwthX Admin Portal\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://grwthx-portal.leoluca.io\" target=\"_blank\" underline=\"hover\">\r\n        GrwthX Admin Portal\r\n        </Typography>\r\n    </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","/**\r\n * Password validator for login pages\r\n */\r\nimport value from 'assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\r\n\r\n// has mix of small and capitals\r\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\r\n\r\n// has special chars\r\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\r\n\r\n// set color based on password strength\r\nexport const strengthColor = (count) => {\r\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\r\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Good', color: value.successMain };\r\n    if (count < 6) return { label: 'Strong', color: value.successDark };\r\n    return { label: 'Poor', color: value.errorMain };\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator = (number) => {\r\n    let strengths = 0;\r\n    if (number.length > 5) strengths += 1;\r\n    if (number.length > 7) strengths += 1;\r\n    if (hasNumber(number)) strengths += 1;\r\n    if (hasSpecial(number)) strengths += 1;\r\n    if (hasMixed(number)) strengths += 1;\r\n    return strengths;\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useScriptRef from 'hooks/useScriptRef';\r\n// import Google from 'assets/images/icons/social-google.svg';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\r\n\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\n// ===========================|| FIREBASE - REGISTER ||=========================== //\r\n\r\nconst FirebaseRegister = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    const customization = useSelector((state) => state.customization);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [checked, setChecked] = useState(true);\r\n\r\n    const [strength, setStrength] = useState(0);\r\n    const [level, setLevel] = useState();\r\n\r\n    const googleHandler = async () => {\r\n        console.error('Register');\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const changePassword = (value) => {\r\n        const temp = strengthIndicator(value);\r\n        setStrength(temp);\r\n        setLevel(strengthColor(temp));\r\n    };\r\n\r\n    useEffect(() => {\r\n        changePassword('123456');\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <AnimateButton>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onClick={googleHandler}\r\n                            size=\"large\"\r\n                            sx={{\r\n                                color: 'grey.700',\r\n                                backgroundColor: theme.palette.grey[50],\r\n                                borderColor: theme.palette.grey[100]\r\n                            }}\r\n                        >\r\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\r\n                                <img\r\n                                    src={'assets/images/icons/social-google.svg'}\r\n                                    alt=\"google\"\r\n                                    width={16}\r\n                                    height={16}\r\n                                    style={{ marginRight: matchDownSM ? 8 : 16 }}\r\n                                />\r\n                            </Box>\r\n                            Sign up with Google\r\n                        </Button>\r\n                    </AnimateButton>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Box sx={{ alignItems: 'center', display: 'flex' }}>\r\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            sx={{\r\n                                cursor: 'unset',\r\n                                m: 2,\r\n                                py: 0.5,\r\n                                px: 7,\r\n                                borderColor: `${theme.palette.grey[100]} !important`,\r\n                                color: `${theme.palette.grey[900]}!important`,\r\n                                fontWeight: 500,\r\n                                borderRadius: `${customization.borderRadius}px`\r\n                            }}\r\n                            disableRipple\r\n                            disabled\r\n                        >\r\n                            OR\r\n                        </Button>\r\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <Typography variant=\"subtitle1\">Sign up with Email address</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <Grid container spacing={matchDownSM ? 0 : 2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"First Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"fname\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"\"\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Last Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"lname\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"\"\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email Address / Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-register\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-register\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={(e) => {\r\n                                    handleChange(e);\r\n                                    changePassword(e.target.value);\r\n                                }}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {strength !== 0 && (\r\n                            <FormControl fullWidth>\r\n                                <Box sx={{ mb: 2 }}>\r\n                                    <Grid container spacing={2} alignItems=\"center\">\r\n                                        <Grid item>\r\n                                            <Box\r\n                                                style={{ backgroundColor: level?.color }}\r\n                                                sx={{ width: 85, height: 8, borderRadius: '7px' }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\r\n                                                {level?.label}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </FormControl>\r\n                        )}\r\n\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={checked}\r\n                                            onChange={(event) => setChecked(event.target.checked)}\r\n                                            name=\"checked\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            Agree with &nbsp;\r\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"#\">\r\n                                                Terms & Condition.\r\n                                            </Typography>\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign up\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FirebaseRegister;\r\n","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport Logo from 'ui-component/Logo';\r\nimport AuthRegister from '../auth-forms/AuthRegister';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\n\r\n// assets\r\n\r\n// ===============================|| AUTH3 - REGISTER ||=============================== //\r\n\r\nconst Register = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <Link to=\"#\">\r\n                                            <Logo />\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Sign up\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"caption\"\r\n                                                        fontSize=\"16px\"\r\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\r\n                                                    >\r\n                                                        Enter your credentials to continue\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AuthRegister />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography\r\n                                                component={Link}\r\n                                                to=\"/pages/login/login3\"\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none' }}\r\n                                            >\r\n                                                Already have an account?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["useScriptRef","scripted","useRef","useEffect","current","AuthFooter","_jsxs","Stack","direction","justifyContent","children","_jsx","Typography","variant","component","Link","href","target","underline","_ref","other","MainCard","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","Box","p","sm","xl","AuthWrapper1","styled","theme","backgroundColor","palette","primary","light","minHeight","strengthIndicator","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","others","useTheme","scriptedRef","matchDownSM","useMediaQuery","breakpoints","down","customization","useSelector","state","showPassword","setShowPassword","useState","checked","setChecked","strength","setStrength","level","setLevel","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","value","temp","count","label","color","_Fragment","Grid","container","spacing","item","AnimateButton","Button","fullWidth","onClick","async","console","error","size","grey","borderColor","mr","width","src","alt","height","style","marginRight","alignItems","display","Divider","orientation","cursor","m","py","px","fontWeight","borderRadius","disableRipple","disabled","mb","Formik","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","_ref2","setErrors","setStatus","setSubmitting","success","err","message","_ref3","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","name","type","defaultValue","typography","customInput","FormControl","Boolean","InputLabel","htmlFor","OutlinedInput","id","onBlur","onChange","inputProps","FormHelperText","e","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","Visibility","VisibilityOff","fontSize","FormControlLabel","control","Checkbox","to","mt","disableElevation","Register","AuthCardWrapper","Logo","secondary","main","gutterBottom","textAlign","AuthRegister","textDecoration"],"sourceRoot":""}