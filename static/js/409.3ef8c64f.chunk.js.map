{"version":3,"file":"static/js/409.3ef8c64f.chunk.js","mappings":"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","sources":["views/roomMakerProject/LogoSection/index.js","views/roomMakerProject/header.js"],"sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { ButtonBase } from '@mui/material';\r\n\r\n// project imports\r\nimport config from 'config';\r\nimport Logo from 'ui-component/Logo';\r\nimport { Box, Typography } from '@mui/material';\r\n\r\n// ==============================|| MAIN LOGO ||============================== //\r\n\r\nconst LogoSection = () => (\r\n    <ButtonBase disableRipple component={Link} to={config.defaultPath}>\r\n        <Box>\r\n            <Typography\r\n                variant=\"h2\"\r\n                component=\"h3\"\r\n                sx={{\r\n                    pl: 2,\r\n                    fontWeight: '500',\r\n                    font: 'Lalezar',\r\n                    fontStyle: 'normal',\r\n                    color: '#FFFFFF',\r\n                    fontSize: '35px',\r\n                    fontFamily: 'Livvic-Bold'\r\n                }}\r\n            >\r\n                Grwth.x\r\n            </Typography>\r\n        </Box>\r\n    </ButtonBase>\r\n);\r\n\r\nexport default LogoSection;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Avatar, Box, Button, MenuItem, TextField, Typography } from '@mui/material';\r\nimport { CheckCircleOutline } from '@mui/icons-material';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\n// project imports\r\nimport LogoSection from './LogoSection';\r\nimport MenuPopover from '../../components/MenuPopover';\r\n// import NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\r\n// assets\r\nimport { IconMenu2, IconBell } from '@tabler/icons';\r\nimport Stack from '@mui/material/Stack';\r\nimport usericon from 'assets/images/icons/UserIcon.webp';\r\nimport { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport { createSearchParams, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport {\r\n    AUTHORISATION_TOKEN_STORAGE_KEY,\r\n    AUTHORISATION_USER_HEAD_IMAGE_KEY,\r\n    AUTHORISATION_USER_ID_STORAGE_KEY,\r\n    AUTHORISATION_USER_NAME_STORAGE_KEY,\r\n    AUTHORISATION_USER_NAME_ZH_STORAGE_KEY,\r\n    ROOM_PLAY_MESSAGE,\r\n    ROOM_PREVIEW_MESSAGE,\r\n    ROOM_SAVE_MESSAGE\r\n} from 'utils/constants';\r\nimport { useCookies } from 'react-cookie';\r\nimport { useGetUserInfoQuery, useSetMarkMutation, useUpdateStatusMutation, useGetGrwthxInfoMutation, useUpdateTitleMutation } from 'store/slices/apiSlice';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport NoteAddIcon from '@mui/icons-material/NoteAdd';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport CommentModal from 'components/CommentModal';\r\nimport { useLogoutMutation } from 'store/slices/apiSlice';\r\n\r\n// ==============================|| MAIN NAVBAR / HEADER ||============================== //\r\n\r\nconst Header = ({ data, userId, roomId, postMessage }) => {\r\n    const [cookies, removeCookie, get] = useCookies();\r\n    const theme = useTheme();\r\n    const [queryParameters] = useSearchParams();\r\n    const [code, setCode] = useState(queryParameters.get('code'));\r\n    const navigate = useNavigate();\r\n    const [userinfo, setUserinfo] = useState([]);\r\n    const [user, setUser] = useState({});\r\n\r\n    const [openCommentModal, setOpenCommentModal] = useState(false);\r\n    \r\n    const { data: userInfo } = useGetUserInfoQuery();\r\n    const [updateStatus, response] = useUpdateStatusMutation();\r\n    const [updateTitle, responseUpdateTitle] = useUpdateTitleMutation();\r\n    const [logout] = useLogoutMutation();\r\n\r\n    const [openTitleChange, setOpenTitleChange] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n\r\n    useEffect(() => {\r\n        setTitle(data.title)\r\n    },[data?.title])\r\n\r\n    useEffect(async () => {\r\n        setTimeout(() => {\r\n            async function init() {\r\n                setUserinfo(cookies[AUTHORISATION_TOKEN_STORAGE_KEY]);\r\n            }\r\n            init();\r\n        }, 1000)\r\n    }, [cookies]);\r\n\r\n    const [open, setOpen] = useState(null);\r\n    const [openMainPop, setOpenMainPop] = useState();\r\n    const [openUsersPop, setOpenUsersPop] = useState();\r\n    const [openGradePop, setOpenGradePop] = useState();\r\n    const [mark, setMark] = useState('');\r\n\r\n    const handleOpen = (event) => {\r\n        setOpen(event.currentTarget);\r\n    };\r\n\r\n    const handleMainPop = (event) => {\r\n        setOpenMainPop(event.currentTarget);\r\n    };\r\n\r\n    const handleUsersPop = (event) => {\r\n        setOpenUsersPop(event.currentTarget);\r\n    };\r\n\r\n    const handleGradePop = (event) => {\r\n        setOpenMainPop(null);\r\n        setOpenGradePop(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(null);\r\n    };\r\n\r\n    const handleLogout = async () => {\r\n        let url = '';\r\n\r\n        if (process.env.NODE_ENV === 'development') {\r\n            url = 'https://uatgrwth.app360.cn/grwth-as/logout?redirect=http://localhost:8081';\r\n        } else {\r\n            url = 'https://uatgrwth.app360.cn/grwth-as/logout?redirect=https://grwthx.grwth.hk';\r\n        }\r\n        logout({});\r\n        removeCookie();\r\n\r\n        setTimeout(() => (window.location.href = url), 1000);\r\n    };\r\n\r\n    const getCurrentStudent = (data) => {\r\n        if (data) {\r\n            const student = data?.students?.filter((student) => {\r\n                return student.userId === userId;\r\n            });\r\n            if (student) {\r\n                setMark(student[0]?.mark);\r\n                return student[0];\r\n            } else {\r\n                return {};\r\n            }\r\n        }\r\n        return {};\r\n    };\r\n\r\n    const getCurrentTeacher = (data) => {\r\n        if (data) {\r\n            const teacher = data?.students?.filter((student) => {\r\n                return student.role === 'Teacher';\r\n            });\r\n            if (teacher) {\r\n                return teacher[0];\r\n            } else {\r\n                return {};\r\n            }\r\n        }\r\n        return {};\r\n    };\r\n\r\n\r\n    const currentStudent = useMemo(() => getCurrentStudent(data), [data]);\r\n\r\n    const currentTeacher = useMemo(() => getCurrentTeacher(data), [data]);\r\n\r\n    const [setMarkMutation, markResponse] = useSetMarkMutation();\r\n\r\n    const handleMarkchange = (e, studentId, roomId, isGroup) => {\r\n        e.stopPropagation();\r\n        setMarkMutation({ studentId, roomId, mark: e.target.value });\r\n\r\n        setMark(e.target.value);\r\n    };\r\n\r\n    const handleGoPlayPreview = (roomMessage) => {\r\n        postMessage(roomMessage);\r\n        const params = { \r\n            roomId,\r\n            userId,\r\n        };\r\n        if(roomMessage ===  ROOM_PREVIEW_MESSAGE){\r\n            setTimeout(() => navigate('/preview', { state: params }), 6000);\r\n        }else if(roomMessage ===  ROOM_PLAY_MESSAGE){\r\n            setTimeout(() => navigate('/play', { state: params }), 6000);\r\n        }\r\n    }\r\n    const handleSaveTitle = () =>{\r\n        updateTitle({\r\n            roomId,\r\n            userId,\r\n            title\r\n        })\r\n        setOpenTitleChange(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                <Box\r\n                    sx={{\r\n                        width: '100%',\r\n                        height: '68px',\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        backgroundColor: '#7983FF',\r\n                        alignItems: 'center',\r\n                        textAlign: 'center',\r\n                        [theme.breakpoints.down('md')]: {\r\n                            width: 'auto'\r\n                        }\r\n                    }}\r\n                >\r\n                    <CommentModal\r\n                        open={openCommentModal}\r\n                        handleClose={() => setOpenCommentModal(false)}\r\n                        roomId={data?.rooms?.length > 0 && data?.rooms[0]?._id}\r\n                        senderId={userInfo?.type === 1 ? currentTeacher?._id : currentStudent._id}\r\n                    />\r\n                    <Box component=\"span\">\r\n                        <LogoSection />\r\n                    </Box>\r\n                    <Box sx={{ display: 'flex', alignItems: 'end' }}>\r\n                        <Box sx={{ background: '#5243B0', borderRadius: '10px' }}>\r\n                            {openTitleChange ? \r\n                            <TextField sx={{ color: '#FFFFFF', fontSize: '28px', fontFamily: 'Livvic-SemiBold' }}\r\n                                        type=\"text\"\r\n                                        value={title}\r\n                                        onChange={(e) => setTitle(e.target.value)} />\r\n                                :\r\n                            <Typography sx={{ color: '#FFFFFF', fontSize: '28px', fontFamily: 'Livvic-SemiBold', margin: '2.5px 10px' }} onClick={() => {setOpenTitleChange(true)}}>\r\n                                {title}\r\n                            </Typography>\r\n                            }\r\n                        </Box>\r\n                        {openTitleChange && \r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick = {handleSaveTitle}\r\n                                sx={{\r\n                                    margin: 'auto 20px',\r\n                                    color: 'white',\r\n                                    backgroundColor: '#7983FF',\r\n                                    borderRadius: '10px',\r\n                                }}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                        }\r\n                        {/* <Box onClick={handleMainPop}>\r\n                            <KeyboardArrowDownIcon style={{ color: '#FFFFFF' }} />\r\n                        </Box> */}\r\n                        <MenuPopover\r\n                            open={Boolean(openMainPop)}\r\n                            anchorEl={openMainPop}\r\n                            onClose={() => setOpenMainPop(null)}\r\n                            sx={{\r\n                                p: 0,\r\n                                mt: 1.5,\r\n                                ml: 0.75,\r\n                                '& .MuiMenuItem-root': {\r\n                                    typography: 'body2',\r\n                                    borderRadius: 0.75\r\n                                }\r\n                            }}\r\n                        >\r\n                            <MenuItem sx={{ m: 1 }}>Assignment Info</MenuItem>\r\n                            <MenuItem\r\n                                onClick={() => {\r\n                                    setOpenCommentModal(true);\r\n                                    setOpenMainPop(null);\r\n                                }}\r\n                                sx={{ m: 1 }}\r\n                            >\r\n                                Comments\r\n                            </MenuItem>\r\n                            {userInfo?.type === 1 && (\r\n                                <MenuItem onClick={handleGradePop} sx={{ m: 1 }}>\r\n                                    Grade/Marks\r\n                                </MenuItem>\r\n                            )}\r\n                        </MenuPopover>\r\n                        {data?.groups?.length > 0 ? (data?.groups[0]?.status === 'Submitted' || data?.groups[0]?.status === 'Done late') && (\r\n                            <MenuPopover\r\n                                anchorReference=\"anchorPosition\"\r\n                                anchorPosition={{ top: 55, left: 700 }}\r\n                                open={Boolean(openGradePop)}\r\n                                anchorEl={openGradePop}\r\n                                onClose={() => setOpenGradePop(null)}\r\n                                sx={{\r\n                                    p: 0,\r\n                                    mt: 1.5,\r\n                                    ml: 0.75,\r\n                                    '& .MuiMenuItem-root': {\r\n                                        typography: 'body2',\r\n                                        borderRadius: 0.75\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <MenuItem sx={{ m: 1, display: 'flex', justifyContent: 'space-between' }}>\r\n                                    <TextField\r\n                                        label={data?.grade}\r\n                                        type=\"text\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true\r\n                                        }}\r\n                                        value={mark}\r\n                                        onChange={(e) =>\r\n                                            handleMarkchange(\r\n                                                e,\r\n                                                data?.groups[0]._id,\r\n                                                data?.rooms[0]._id,\r\n                                                currentStudent?.groupName ? true : false\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                </MenuItem>\r\n                            </MenuPopover>\r\n                        ) : (currentStudent?.status === 'Submitted' || currentStudent?.status === 'Done late') && (\r\n                            <MenuPopover\r\n                                anchorReference=\"anchorPosition\"\r\n                                anchorPosition={{ top: 55, left: 700 }}\r\n                                open={Boolean(openGradePop)}\r\n                                anchorEl={openGradePop}\r\n                                onClose={() => setOpenGradePop(null)}\r\n                                sx={{\r\n                                    p: 0,\r\n                                    mt: 1.5,\r\n                                    ml: 0.75,\r\n                                    '& .MuiMenuItem-root': {\r\n                                        typography: 'body2',\r\n                                        borderRadius: 0.75\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <MenuItem sx={{ m: 1, display: 'flex', justifyContent: 'space-between' }}>\r\n                                    <TextField\r\n                                        label={data?.grade}\r\n                                        type=\"text\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true\r\n                                        }}\r\n                                        value={mark}\r\n                                        onChange={(e) =>\r\n                                            handleMarkchange(\r\n                                                e,\r\n                                                currentStudent._id,\r\n                                                data?.rooms[0]._id,\r\n                                                currentStudent?.groupName ? true : false\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                </MenuItem>\r\n                            </MenuPopover>\r\n                        )}\r\n                    </Box>\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-evenly',\r\n                            pr: 4,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            gap: '20px'\r\n                        }}\r\n                    >\r\n                        {/* {userInfo?.type === 1 && ( */}\r\n                        <Box sx={{ mr: 6, display: 'flex', alignItems: 'end' }}>\r\n                            <Typography\r\n                                variant=\"h6\"\r\n                                component=\"h6\"\r\n                                sx={{\r\n                                    pl: 2,\r\n                                    fontWeight: '500',\r\n                                    font: 'Lalezar',\r\n                                    fontStyle: 'normal',\r\n                                    color: '#FFFFFF',\r\n                                    fontSize: '15px',\r\n                                    fontFamily: 'Livvic',\r\n                                    cursor: 'pointer'\r\n                                }}\r\n                            >\r\n                                {currentStudent?.nameZh || cookies[AUTHORISATION_USER_NAME_ZH_STORAGE_KEY]}\r\n                            </Typography>\r\n                            {/* <Box onClick={handleUsersPop}>\r\n                                    <KeyboardArrowDownIcon style={{ color: '#FFFFFF' }} />\r\n                                </Box> */}\r\n                            <MenuPopover\r\n                                open={Boolean(openUsersPop)}\r\n                                anchorEl={openUsersPop}\r\n                                onClose={() => setOpenUsersPop(null)}\r\n                                sx={{\r\n                                    p: 0,\r\n                                    mt: 1.5,\r\n                                    ml: 0.75,\r\n                                    '& .MuiMenuItem-root': {\r\n                                        typography: 'body2',\r\n                                        borderRadius: 0.75\r\n                                    }\r\n                                }}\r\n                            >\r\n                                {data?.students?.map((student) => {\r\n                                    if (student.role === 'Student')\r\n                                        return (\r\n                                            <MenuItem sx={{ m: 1, display: 'flex', justifyContent: 'space-between' }}>\r\n                                                <Typography>{student.nameZh}</Typography>\r\n                                                <Typography>{student.mark ? student.mark : student.status}</Typography>\r\n                                            </MenuItem>\r\n                                        );\r\n                                })}\r\n                            </MenuPopover>\r\n                        </Box>\r\n                        {/* )} */}\r\n\r\n                        <Box onClick={() => postMessage(ROOM_SAVE_MESSAGE)}>\r\n                            <SaveIcon sx={{ color: '#ffffff', width: '35px', height: '35px' }} />\r\n                        </Box>\r\n                        <Box onClick={() =>  handleGoPlayPreview(ROOM_PREVIEW_MESSAGE)}>\r\n                            <VisibilityIcon sx={{ color: '#ffffff', width: '35px', height: '35px' }} />\r\n                        </Box>\r\n                        <Box onClick={() => handleGoPlayPreview(ROOM_PLAY_MESSAGE)}>\r\n                            <PlayArrowIcon sx={{ color: '#ffffff', width: '35px', height: '35px' }} />\r\n                        </Box>\r\n                        <Stack direction=\"row\" spacing={2}>\r\n                            {/* <IconBell style={{ color: '#FFFFFF', width: '35px', height: '35px' }} /> */}\r\n                            <img\r\n                                src={cookies[AUTHORISATION_USER_HEAD_IMAGE_KEY] || usericon}\r\n                                alt=\"UserIcon\"\r\n                                width={32}\r\n                                height={32}\r\n                                style={{ borderRadius: '50%' }}\r\n                                onClick={handleOpen}\r\n                            />\r\n                        </Stack>\r\n                        <MenuPopover\r\n                            open={Boolean(open)}\r\n                            anchorEl={open}\r\n                            onClose={handleClose}\r\n                            sx={{\r\n                                p: 0,\r\n                                mt: 1.5,\r\n                                ml: 0.75,\r\n                                '& .MuiMenuItem-root': {\r\n                                    typography: 'body2',\r\n                                    borderRadius: 0.75\r\n                                }\r\n                            }}\r\n                        >\r\n                            <MenuItem onClick={handleLogout} sx={{ m: 1 }}>\r\n                                Logout\r\n                            </MenuItem>\r\n                        </MenuPopover>\r\n                    </Box>\r\n                </Box>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    handleLeftDrawerToggle: PropTypes.func\r\n};\r\n\r\nexport default Header;\r\n"],"names":["LogoSection","_jsx","ButtonBase","disableRipple","component","Link","to","config","children","Box","Typography","variant","sx","pl","fontWeight","font","fontStyle","color","fontSize","fontFamily","_ref","_data$rooms","_data$rooms$","_data$groups","_data$groups$","_data$groups$2","_data$students3","data","userId","roomId","postMessage","cookies","removeCookie","get","useCookies","theme","useTheme","queryParameters","useSearchParams","code","setCode","useState","navigate","useNavigate","userinfo","setUserinfo","user","setUser","openCommentModal","setOpenCommentModal","userInfo","useGetUserInfoQuery","updateStatus","response","useUpdateStatusMutation","updateTitle","responseUpdateTitle","useUpdateTitleMutation","logout","useLogoutMutation","openTitleChange","setOpenTitleChange","title","setTitle","useEffect","async","setTimeout","AUTHORISATION_TOKEN_STORAGE_KEY","init","open","setOpen","openMainPop","setOpenMainPop","openUsersPop","setOpenUsersPop","openGradePop","setOpenGradePop","mark","setMark","currentStudent","useMemo","_data$students","student","students","filter","_student$","getCurrentStudent","currentTeacher","_data$students2","teacher","role","getCurrentTeacher","setMarkMutation","markResponse","useSetMarkMutation","handleMarkchange","e","studentId","isGroup","stopPropagation","target","value","handleGoPlayPreview","roomMessage","params","ROOM_PREVIEW_MESSAGE","state","ROOM_PLAY_MESSAGE","_Fragment","_jsxs","width","height","display","justifyContent","backgroundColor","alignItems","textAlign","breakpoints","down","CommentModal","handleClose","rooms","length","_id","senderId","type","background","borderRadius","TextField","onChange","margin","onClick","Button","handleSaveTitle","MenuPopover","Boolean","anchorEl","onClose","p","mt","ml","typography","MenuItem","m","event","currentTarget","groups","status","anchorReference","anchorPosition","top","left","label","grade","InputLabelProps","shrink","groupName","pr","gap","mr","cursor","nameZh","AUTHORISATION_USER_NAME_ZH_STORAGE_KEY","map","ROOM_SAVE_MESSAGE","SaveIcon","VisibilityIcon","PlayArrowIcon","Stack","direction","spacing","src","AUTHORISATION_USER_HEAD_IMAGE_KEY","usericon","alt","style","url","window","location","href"],"sourceRoot":""}