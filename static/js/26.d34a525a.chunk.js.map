{"version":3,"file":"static/js/26.d34a525a.chunk.js","mappings":"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","sources":["views/favourites/index.js"],"sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Tab from '@mui/material/Tab';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport Box from '@mui/material/Box';\r\nimport { Container, Grid } from '@mui/material';\r\nimport Stack from '@mui/material/Stack';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Radio from '@mui/material/Radio';\r\nimport SearchComponent from 'react-material-ui-searchbar';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { userRows } from '../../components/Datagrid/dummyData';\r\nimport ImageListItem from '@mui/material/ImageListItem';\r\nimport room1 from '../../assets/images/roomimg/room1.png';\r\nimport { IconUserCircle } from '@tabler/icons';\r\nimport PendingOutlinedIcon from '@mui/icons-material/PendingOutlined';\r\nimport Popover from '@mui/material/Popover';\r\nimport { Link } from 'react-router-dom';\r\nimport TextareaAutosize from '@mui/base/TextareaAutosize';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { styled } from '@mui/material/styles';\r\nimport RoomA1 from 'assets/images/roomimg/RoomA1.png';\r\nimport RoomA_Items1 from 'assets/images/roomimg/RoomA_Items1.webp';\r\nimport RoomA_Items2 from 'assets/images/roomimg/RoomA_Items2.webp';\r\nimport RoomA_Items3 from 'assets/images/roomimg/RoomA_Items3.webp';\r\nimport RoomA_Items4 from 'assets/images/roomimg/RoomA_Items4.webp';\r\nimport Paper from '@mui/material/Paper';\r\nimport UserIconGroup from 'assets/images/icons/UserIconGroup.png';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport { IconHeart, IconArchive } from '@tabler/icons';\r\nimport '../library/index.css';\r\nimport { useCookies } from 'react-cookie';\r\nimport { useGetRoomsMutation, useToggleFavoriteMutation } from 'store/slices/apiSlice';\r\nimport { AUTHORISATION_USER_ID_STORAGE_KEY } from 'utils/constants';\r\n\r\n//custom material ui paper\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    width: 280,\r\n    height: 300,\r\n    marginTop: 0,\r\n    boxShadow: '0 8px 8px 3px rgb(0 0 0 / 25%)',\r\n    '&:hover': {\r\n        border: 0,\r\n        boxShadow: '5px 5px 8px 0px #afb5ff'\r\n    },\r\n    cursor: 'pointer'\r\n    // boxShadow: \"3.0331px 2px 3.0331px rgba(0, 0, 0, 0.25)\",\r\n}));\r\n\r\nconst Favourites = () => {\r\n    const [cookies] = useCookies();\r\n    const [value, setValue] = useState('1');\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const theme = useTheme(); //using theme\r\n    const StyledTab = styled(Tab)({\r\n        '&.Mui-selected': {\r\n            color: theme.palette.background.primaryColor\r\n        }\r\n    });\r\n\r\n    const [favouritedata, setFavouritedata] = useState([]);\r\n    const [feachdata, setFetchData] = useState(false);\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    const [getProjects, projectResponse] = useGetRoomsMutation();\r\n    const [toggleProjectFavorite, favoriteResponse] = useToggleFavoriteMutation();\r\n\r\n    useEffect(() => {\r\n        getProjects({ userId: cookies[AUTHORISATION_USER_ID_STORAGE_KEY] });\r\n    }, [favoriteResponse]);\r\n\r\n    useEffect(() => {\r\n        if (projectResponse?.data) {\r\n            const projectRooms = _.filter(projectResponse?.data, (room) => {\r\n                return room.assignmentId === null;\r\n            });\r\n            setProjects(projectRooms);\r\n        }\r\n    }, [projectResponse]);\r\n\r\n    const favouriteiconClick = async (id, check) => {\r\n        setFetchData((t) => !t);\r\n    };\r\n\r\n    const FavouriteRoom = () => {\r\n        const currentDate = new Date();\r\n        const toIsodate = currentDate.toISOString();\r\n        const toIsodate1 = toIsodate.slice(0, -5);\r\n\r\n        const gotoRoom = (path) => {\r\n            window.open(path);\r\n        };\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Grid container spacing={5} sx={{ ml: 6 }}>\r\n                    {projects.map((project, index) => {\r\n                        const favoriteUser = _.filter(project?.sharingUsers, (user) => {\r\n                            return user.userId === cookies.userId;\r\n                        })[0];\r\n                        if (favoriteUser.isFavorite)\r\n                            return (\r\n                                //spacing size problem\r\n                                <Grid container spacing={0} xs={4} item key={index}>\r\n                                    <Item>\r\n                                        <ImageListItem sx={{ mt: 5, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                            <img\r\n                                                src={project?.headImg || RoomA1}\r\n                                                alt=\"room1\"\r\n                                                loading=\"lazy\"\r\n                                                style={{ width: '197.23px', height: '212.25px' }}\r\n                                                onClick={() => gotoRoom(`${project.storagePath}${project.roomId}&userId=${cookies[AUTHORISATION_USER_ID_STORAGE_KEY]}`)}\r\n                                            />\r\n                                        </ImageListItem>\r\n\r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', padding: '0px 13px' }}>\r\n                                            <Typography component=\"h2\" variant=\"h2\" sx={{ fontFamily: 'Livvic' }}></Typography>\r\n                                            <IconHeart\r\n                                                style={favoriteUser.isFavorite == true ? { fill: '#CE2C2C' } : {}}\r\n                                                onClick={() =>\r\n                                                    toggleProjectFavorite({ roomId: project.id, favorite: !favoriteUser.isFavorite })\r\n                                                }\r\n                                            />\r\n                                        </Box>\r\n\r\n                                        <Typography component=\"h2\" variant=\"h2\" sx={{ mt: 5 }}>\r\n                                            {project.title}\r\n                                        </Typography>\r\n                                    </Item>\r\n                                </Grid>\r\n                            );\r\n                    })}\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <Grid container spacing={1} sx={{ mx: 'auto' }}>\r\n                <Box sx={{ mt: '10px' }}>\r\n                    <Typography component=\"h2\" variant=\"h3\" sx={{ fontFamily: 'Livvic' }}>\r\n                        Favourites\r\n                    </Typography>\r\n                </Box>\r\n\r\n                <Grid container item spacing={0} sx={{ mt: 4 }}>\r\n                    <FavouriteRoom />\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Favourites;\r\n"],"names":["Item","styled","Paper","_ref","theme","backgroundColor","palette","mode","typography","body2","textAlign","color","text","secondary","width","height","marginTop","boxShadow","border","cursor","Favourites","cookies","useCookies","value","setValue","useState","useTheme","favouritedata","setFavouritedata","Tab","background","primaryColor","feachdata","setFetchData","projects","setProjects","getProjects","projectResponse","useGetRoomsMutation","toggleProjectFavorite","favoriteResponse","useToggleFavoriteMutation","useEffect","userId","AUTHORISATION_USER_ID_STORAGE_KEY","data","projectRooms","_","filter","room","assignmentId","FavouriteRoom","Date","toISOString","slice","_jsx","React","children","Grid","container","spacing","sx","ml","map","project","index","favoriteUser","sharingUsers","user","isFavorite","xs","item","_jsxs","ImageListItem","mt","display","alignItems","justifyContent","src","headImg","RoomA1","alt","loading","style","onClick","gotoRoom","path","storagePath","roomId","window","open","Box","padding","Typography","component","variant","fontFamily","IconHeart","fill","id","favorite","title","flexGrow","mx"],"sourceRoot":""}